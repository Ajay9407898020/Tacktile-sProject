import { ToasteredService } from './../toaster.service';
import { Products } from './../products/products.model';
import { AuthService } from './../auth.service';
import { NgForm } from '@angular/forms';
import { Component, OnInit } from '@angular/core';
import { MatDialogRef } from '@angular/material/dialog';
import { v4 as uuidv4 } from 'uuid';
import { forEach } from 'lodash';


@Component({
	selector: 'app-add-product',
	templateUrl: './add-product.component.html',
	styleUrls: ['./add-product.component.css']
})

export class AddProductComponent implements OnInit {

	submitted = false;

	productList : Array<Products> = [];

	// Product exists or not flag
	alreadyExists : boolean = false;

	// THIS CURRENTUSERID VARIABLE HOLDS THE CURRNT ID OF LOGGED IN USER 
	currentUserId: String = this.authService.authInfo('unique_identifier');

	// CURRENT DATE FIELD IS GENERATED BY DATE CLASS
	currentDate = new Date(2017, 1, 1);

	// Form Object Created
	productFormObject = {

		ProductId : String,
		productName : String,
		productUnit : String,
		purchaseRate : Number,
		saleRate : Number,
		productCode : Number,
	}

	// Unique Id created using uuidv4 library
	productId : string = uuidv4();

	constructor(private dialogRef: MatDialogRef<AddProductComponent>,
				private authService : AuthService,
				private toasteredService : ToasteredService) { };

	ngOnInit(): void {};

	// AFTER SUBMITTING THE FORM PASSING THE VALUE FROM THE FORM THROUGH CLOSEDIALOG METHOD
	onSubmit(form : NgForm) {

		this.submitted = true;

		this.productFormObject = form.value;

		let productData = sessionStorage.getItem('products');

		if (productData != null || productData != undefined) {

			this.productList = JSON.parse(productData);
		}

		// IF FROM IS INVALID THEN RETURNS OTHERWISE THE DATA IS PASSED TO THE PRODUCT COMPONENT
		if(!form.valid && form !== null) {

			return
		} else {

			forEach(this.productList, (value) => {

				if (form.value.productName == value.productName) {
					
					this.toasteredService.showFailiure('Product already exists');
					this.alreadyExists = true;
				}
			});

			if (!this.alreadyExists) {

				this.closeDialog({
					formData: this.productFormObject,
					status: 'success'
				})
			}
		}	
	}

	// THIS METHDO IS USE TO PASS THE VALUE OF FORMS THOROUGH DIALOGREF OR INSTANCE OF MATDIALOGREF SERVICE
	closeDialog(value: any) {

		// Passing value of the forms
		if(value != null){

			this.dialogRef.close(value);
		} else {
			return;
		}
	}

}
